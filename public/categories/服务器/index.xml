<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>服务器 on 指北针</title>
        <link>https://kris0923.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <description>Recent content in 服务器 on 指北针</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 01 Sep 2019 23:46:27 +0800</lastBuildDate><atom:link href="https://kris0923.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Nginx介绍</title>
        <link>https://kris0923.github.io/p/nginx%E4%BB%8B%E7%BB%8D/</link>
        <pubDate>Sun, 01 Sep 2019 23:46:27 +0800</pubDate>
        
        <guid>https://kris0923.github.io/p/nginx%E4%BB%8B%E7%BB%8D/</guid>
        <description>&lt;h1 id=&#34;nginx是什么&#34;&gt;Nginx是什么&lt;/h1&gt;
&lt;p&gt;nginx 是一个免费的，开源的，高性能HTTP服务器和反向代理，以及IMAP / POP3代理服务器。NGINX以其高性能，稳定性，丰富的功能集，简单的配置和低资源消耗而闻名。与传统服务器不同的是，Nginx不依赖线程来处理请求，它使用了更加可扩展的异步事件驱动的架构，因此与其他的服务器相比，Nginx可以使用很少的内存来同时处理上千个请求。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://news.netcraft.com/archives/2019/08/15/august-2019-web-server-survey.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;netcraft&lt;/a&gt;调查显示，到2019年8月nginx拥有超过31％的计算机市场份额，仅落后于Apache5.39%&lt;/p&gt;
&lt;h1 id=&#34;nginx可以做什么&#34;&gt;Nginx可以做什么&lt;/h1&gt;
&lt;h2 id=&#34;1-基本http服务&#34;&gt;1 基本HTTP服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;静态文件处理（如HTML静态网页），处理索引文件以及支持自动个索引&lt;/li&gt;
&lt;li&gt;打开并自行管理文件描述符缓存&lt;/li&gt;
&lt;li&gt;提供反向代理服务，并可以使用缓存加速反向代理，同时完成简单的负载均衡及容错&lt;/li&gt;
&lt;li&gt;提供缘层FastCGI服务缓存机制，加速访问，同时完成简单的负载均衡及容错&lt;/li&gt;
&lt;li&gt;过滤器功能，Nginx基本过滤器有：gzip压缩、ranges支持、chunked支持、XSTL、SSI、以及图像缩放等&lt;/li&gt;
&lt;li&gt;支持SSL&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-高级http服务&#34;&gt;2 高级HTTP服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基于名字和IP的虚拟主机设置&lt;/li&gt;
&lt;li&gt;支持HTTP/1.0中的KEEP-ALIVE模式和PipeLined模型连接&lt;/li&gt;
&lt;li&gt;支持重新加载配置及升级时无需中断正在处理的请求&lt;/li&gt;
&lt;li&gt;自定义日志格式、带缓存的日志写操作以及快速日志轮转&lt;/li&gt;
&lt;li&gt;提供3XX～5XX错误代码重定向功能&lt;/li&gt;
&lt;li&gt;支持HTTP DAV模块，从而为HTTP WEBDAV提供PUT、DELETE、MKCOL、COPY、以及MOVE方法&lt;/li&gt;
&lt;li&gt;支持FLV流和MP4传输&lt;/li&gt;
&lt;li&gt;支持网络监控，基于客户端IP地址和HTTP基本认证机制的访问控制，速率限制，来自同一IP的同时连接数或请求限制等&lt;/li&gt;
&lt;li&gt;支持Perl语言&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;邮件代理服务&#34;&gt;邮件代理服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用外部HTTP认证服务器重定向 到用户的IMAP/POP3后端，并支持IMAP认证方式（LOGIN、AUTH LOGIN/PLAIN/CRAM-MD5）和POP3认证方式(USER/PASS、APOP、AUTH LOGIN/PLIAN/CRAM-MD5)&lt;/li&gt;
&lt;li&gt;使用外部HTTP认证服务器认证用户后重定向到内部STMP后端，并支持 STMP认证方式&lt;/li&gt;
&lt;li&gt;支持邮件代理服务下的安全套接层安全协议SSL&lt;/li&gt;
&lt;li&gt;支持纯文本通信协议的扩展协议STARTTLS&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;优点&#34;&gt;优点&lt;/h1&gt;
&lt;p&gt;在Nginx之前市面上已经有Apache，tomcat，IIS等服务器
与这些Web服务器相比，Nginx具有高并发，低内存消耗的优势，Nginx在处理静态文件方面比其他服务器要优秀很多。&lt;/p&gt;
&lt;h1 id=&#34;nginx的rewrite功能&#34;&gt;Nginx的Rewrite功能&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;地址重写与地址转发
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在ngx_http_rewrite_module中
用法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rewrite regex replacement [flag]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;flag 为 last，break，redirect，permanent&lt;/p&gt;
&lt;p&gt;～ 大小写敏感
～* 大小写不敏感&lt;/p&gt;
&lt;p&gt;nginx 缓存&lt;/p&gt;
&lt;p&gt;Proxy Store， Proxy Cache，基于memcache的缓存机制，
Squid联合，第三方模块 ncache&lt;/p&gt;
&lt;h1 id=&#34;nginx-内存分配&#34;&gt;Nginx 内存分配&lt;/h1&gt;
&lt;p&gt;当申请的内存大于4kb（一页内存的大小）时，该内存空间可用于分配的最大内存数据块不能超过4KB&lt;/p&gt;
&lt;p&gt;Nginx服务器架构&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
