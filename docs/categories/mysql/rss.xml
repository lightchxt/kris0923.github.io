<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySql on 指北针</title><link>blog.ibird.site/categories/mysql/</link><description>Recent content in MySql on 指北针</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 08 Sep 2021 22:36:54 +0800</lastBuildDate><atom:link href="blog.ibird.site/categories/mysql/rss.xml" rel="self" type="application/rss+xml"/><item><title>一文了解MySql</title><link>blog.ibird.site/post/mysql/</link><pubDate>Wed, 08 Sep 2021 22:36:54 +0800</pubDate><guid>blog.ibird.site/post/mysql/</guid><description>MySlq 逻辑架构 {{ $image := .Resources.GetMatch &amp;ldquo;mysql.png&amp;rdquo; }} 为什么不要使用长事务： 长事务意味着系统里面存在着很老的事务视图，在事务提交之前这些回滚记录都必须保留，导致占用大量的存</description></item><item><title>MySql如何使用索引（二）</title><link>blog.ibird.site/post/mysql%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E4%BA%8C/</link><pubDate>Sun, 28 Jul 2019 21:11:18 +0800</pubDate><guid>blog.ibird.site/post/mysql%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E4%BA%8C/</guid><description>上篇 介绍了MySql什么时候会尝试使用索引，本文介绍一下我了解的不会使用索引的情况, 仍然使用上次建立好的表 1. where 子句中like 使用了前缀通配符</description></item><item><title>MySql如何使用索引（一）</title><link>blog.ibird.site/post/mysql%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E4%B8%80/</link><pubDate>Sun, 28 Jul 2019 21:10:51 +0800</pubDate><guid>blog.ibird.site/post/mysql%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E4%B8%80/</guid><description>我们都知道在 MySql 中使用索引可以提高查询效率,但有时候真正执行Sql查询的时候却没有按照我们的预想使用索引，而是全表扫描，导致有慢Sql影响了整</description></item><item><title>MySql 修改表结构时 ALTER,MODIFY,CHANGE的区别</title><link>blog.ibird.site/post/mysql-%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%BB%93%E6%9E%84%E6%97%B6-alter-modify-change%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Wed, 17 Jul 2019 23:09:55 +0000</pubDate><guid>blog.ibird.site/post/mysql-%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%BB%93%E6%9E%84%E6%97%B6-alter-modify-change%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>根据MySql文档，我们知道在修改表内某一列的属性的时候，MySql支持3中语法结构： ALTER [ONLINE|OFFLINE] [IGNORE] TABLE tbl_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT} ALTER [ONLINE|OFFLINE] [IGNORE] TABLE tbl_name CHANGE [COLUMN] old_col_name new_col_name column_definition [FIRST|AFTER col_name] ALTER</description></item></channel></rss>